plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
    id "org.jetbrains.kotlin.kapt"
}

group 'com.github.theapache64'
version retrosheet_version

repositories {
    mavenCentral()
    maven {url "https://jitpack.io"}
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "shifarshifz"
            name "shifarshifz"
            email "theapache64@gmail.com"
        }
    }

    scm {
        url "https://github.com/theapache64/retrosheet"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'com.github.theapache64'
            artifactId 'retrosheet'
            version retrosheet_version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Turn Google Spreadsheet to JSON endpoint (for Android and JVM)')
                root.appendNode('name', 'retrosheet')
                root.appendNode('url', 'https://github.com/theapache64/retrosheet')
                root.children().last() + pomConfig
            }
        }
    }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation "junit:junit:$junit_version"

    // FastCSV : Ultra fast and simple RFC 4180 compliant CSV library.
    implementation 'de.siegmar:fastcsv:2.1.0'

    // Retrofit : A type-safe HTTP client for Android and Java.
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    // Moshi : Moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Expekt : An assertion library for Kotlin
    testImplementation "com.github.theapache64:expekt:$expekt_version"

    // Mockito Core : Mockito mock objects library core API and implementation
    testImplementation 'org.mockito:mockito-inline:4.5.1'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}